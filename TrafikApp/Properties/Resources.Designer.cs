//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrafikApp.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TrafikApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cerrarSesionImg {
            get {
                object obj = ResourceManager.GetObject("cerrarSesionImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap enviarImg {
            get {
                object obj = ResourceManager.GetObject("enviarImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {
        ///  &quot;type&quot;: &quot;FeatureCollection&quot;,
        ///  &quot;generator&quot;: &quot;overpass-turbo&quot;,
        ///  &quot;copyright&quot;: &quot;The data included in this document is from www.openstreetmap.org. The data is made available under ODbL.&quot;,
        ///  &quot;timestamp&quot;: &quot;2025-01-09T10:52:45Z&quot;,
        ///  &quot;features&quot;: [
        ///    {
        ///      &quot;type&quot;: &quot;Feature&quot;,
        ///      &quot;properties&quot;: {
        ///        &quot;@id&quot;: &quot;relation/349042&quot;,
        ///        &quot;ISO3166-2&quot;: &quot;ES-PV&quot;,
        ///        &quot;admin_level&quot;: &quot;4&quot;,
        ///        &quot;alt_name:eo&quot;: &quot;Eŭskio&quot;,
        ///        &quot;border_type&quot;: &quot;region&quot;,
        ///        &quot;boundary&quot;: &quot;administrative&quot;,
        ///        &quot;default_la [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string export {
            get {
                return ResourceManager.GetString("export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap flechaAtras {
            get {
                object obj = ResourceManager.GetObject("flechaAtras", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap incidenciaLogoGestionarImg {
            get {
                object obj = ResourceManager.GetObject("incidenciaLogoGestionarImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;es&quot;&gt;
        ///    &lt;head&gt;
        ///      &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///      &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///      &lt;title&gt;Mapa con OpenStreetMap y Leaflet&lt;/title&gt;
        ///
        ///      &lt;!-- Estilos de Leaflet --&gt;
        ///      &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/leaflet/dist/leaflet.css&quot; /&gt;
        ///
        ///      &lt;style&gt;
        ///        /* Tamaño del mapa */
        ///          #map {
        ///              width: 100%;
        ///              height: 370px;
        ///          }
        ///      &lt;/style&gt;
        ///    &lt;/head&gt;
        ///    &lt;body&gt;
        ///
        ///
        /// [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string map {
            get {
                return ResourceManager.GetString("map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ojoAbiertoContrasenaImagen {
            get {
                object obj = ResourceManager.GetObject("ojoAbiertoContrasenaImagen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ojoCerradoContrasenaImagen {
            get {
                object obj = ResourceManager.GetObject("ojoCerradoContrasenaImagen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap salirImg {
            get {
                object obj = ResourceManager.GetObject("salirImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TrafikApp {
            get {
                object obj = ResourceManager.GetObject("TrafikApp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TrafikAppSinFondo {
            get {
                object obj = ResourceManager.GetObject("TrafikAppSinFondo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap usuarioImagen {
            get {
                object obj = ResourceManager.GetObject("usuarioImagen", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap usuarioLogoGestionarImg {
            get {
                object obj = ResourceManager.GetObject("usuarioLogoGestionarImg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
